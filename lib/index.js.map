{"version":3,"file":"index.js","sources":["../src/types/index.ts","../src/genApi.ts","../src/utils/index.ts","../src/genTS.ts","../src/genService.ts","../src/index.ts"],"sourcesContent":["import json5 from 'json5';\n\ninterface SwaggerInfoTS {\n  title: string\n  version: string\n  description: string\n  contact?: {  // 联系人\n    name: string\n    url: string\n    email: string\n  },\n  license?: {  // 许可证\n    name: string\n    url: string\n  }\n  termsOfService?: string  // 服务期限\n}\n\nenum SwaggerParameterInEnum {\n  path,\n  query,\n  body,\n  formData,\n  header\n}\n\nexport enum SchemaTypeEnum {\n  string,\n  number,\n  integer,\n  boolean,\n  object,\n  array,\n  null,\n  any,\n}\n\ninterface SchemaObject {\n  type: SchemaTypeEnum\n  required?: string[] // TODO: 是布尔吗\n  properties?: {\n    [key: string]: SchemaObject\n  }\n  items?: SchemaObject\n}\n\ninterface SwaggerParameterTS {\n  name: string\n  type: SchemaTypeEnum\n  description: string,\n  required: boolean,\n  in: SwaggerParameterInEnum,\n  schema: {\n    type: SchemaTypeEnum\n    $ref: string\n  }\n}\n\ninterface SwaggerResponsesTS {\n  description: string,\n  schema: {\n    $ref: string\n  }\n}\n\ninterface CommonParamTS {\n  name: string\n  type: string\n  description: string\n  required?: boolean\n  schema?: SchemaObject\n}\n\ninterface SwaggerPathsTS {\n  [key: string]: {\n    [key: string]: {\n      summary: string  // 摘要\n      description: string\n      tags: string[]\n      parameters: SwaggerParameterTS // 请求数据\n      responses: { // 响应数据\n        [key: string]: SwaggerResponsesTS\n      }\n      operationId?: string\n      deprecated?: boolean\n    }\n  }\n}\n\ninterface ApiTagItemTS {\n  name: string\n  description: string\n}\n\n\nexport interface SwaggerJsonTS {\n  swagger: string\n  info: SwaggerInfoTS\n  basePath: string\n  tags: ApiTagItemTS[]\n  paths: SwaggerPathsTS\n  definitions: {\n    [key: string]: SchemaObject\n  }\n}\n\n// TODO: 确认下\nexport enum RequestBodyTypeEnum {\n  form,\n  json,\n  file,\n  row\n}\n\n// 响应项\ninterface ResponseItemTS {\n  statusCode: number\n  description: string\n  data: SchemaObject\n}\n\nexport interface ApiItemTS {\n  summary: string // 摘要\n  path: string\n  method: string\n  tags: string[]\n  requestParams: CommonParamTS[] // 请求路径参数\n  requestQuery: CommonParamTS[]  // 请求路径query\n  requestHeader: CommonParamTS[] // 请求头\n  requestBodyType: RequestBodyTypeEnum\n  requestBody: CommonParamTS[] | string | SchemaObject\n  responseList: ResponseItemTS[]\n}\n\nexport interface ApiInfoTS {\n  swagger: string\n  info: SwaggerInfoTS\n  basePath: string\n  tags: ApiTagItemTS[]\n  apiList: ApiItemTS[]\n}\n\nexport interface GenCodeResultTS {\n  apiInfo: ApiInfoTS\n  ts?: string\n  service?: string\n}\n\nexport const enum genListEnum {\n  api,\n  ts,\n  service\n}\n\n\nexport interface OptionsTS {\n  // 自定义 ts interface 名称\n  setTSInterfaceName?: () => string\n\n  // 自定义 service 模板\n  serviceTemplate?: string\n\n  // 自定义 service 模板变量\n  setServiceTemplateVariable?: () => ({[key: string]: any})\n}\n\n\nexport enum JsonTypeEnum {\n  json,\n  jsonSchema\n}\n","import { SwaggerJsonTS, ApiInfoTS, RequestBodyTypeEnum, SchemaTypeEnum } from \"./types\";\n\nexport const genApi = (swaggerData: SwaggerJsonTS): ApiInfoTS => {\n  console.log(\"----genApi\", swaggerData);\n\n  return {\n    swagger: \"\",\n    info: {\n      title: \"\",\n      version: \"\",\n      description: \"\",\n    },\n    basePath: \"\",\n    tags: [\n      {\n        name: \"string\",\n        description: \"string\",\n      },\n    ],\n    apiList: [\n      {\n        summary: \"string\", // 摘要\n        path: \"string\",\n        method: \"string\",\n        tags: [\"string\"],\n        requestParams: [\n          {\n            // 请求路径参数\n            name: \"string\",\n            type: \"string\",\n            description: \"string\",\n          },\n        ],\n        requestQuery: [\n          {\n            // 请求路径query\n            name: \"string\",\n            type: \"string\",\n            description: \"string\",\n          },\n        ],\n        requestHeader: [\n          {\n            // 请求头\n            name: \"string\",\n            type: \"string\",\n            description: \"string\",\n          },\n        ],\n        requestBodyType: RequestBodyTypeEnum.json,\n        requestBody: \"\", // CommonParamTS[] | string | SchemaObject\n        responseList: [\n          {\n            statusCode: 200,\n            description: \"string\",\n            data: {\n              type: SchemaTypeEnum.string\n            }\n          },\n        ],\n      },\n    ],\n  };\n};\n","import { OptionsTS, JsonTypeEnum } from '../types'\n\nexport const genTSCode = (data: any, type: JsonTypeEnum, options: OptionsTS): string => {\n  console.log('---genTSCode', data, type, options);\n\n  return '';\n}\n","import { ApiInfoTS, OptionsTS, JsonTypeEnum } from './types';\nimport { genTSCode } from './utils'\n\nexport const genTS = (apiInfo: ApiInfoTS, options: OptionsTS): string => {\n  console.log('---genService', apiInfo, options);\n\n  genTSCode(apiInfo, JsonTypeEnum.jsonSchema, options);\n\n  return ''\n}\n","import { ApiInfoTS, OptionsTS } from './types'\n\nexport const genService = (apiInfo: ApiInfoTS, options: OptionsTS): string => {\n  console.log('---genService', apiInfo, options);\n\n  return ''\n}\n","import { genListEnum, SwaggerJsonTS, GenCodeResultTS, OptionsTS } from './types/index';\nimport { genApi } from './genApi';\nimport { genTS } from './genTS';\nimport { genService } from './genService';\n\n\n/**\n * 生成代码\n *\n * @param {(SwaggerJsonTS | string)} swagger 接收 json、ymal 格式的数据\n * @param {genListEnum} genList\n * @return {*}  {GenCodeResultTS}\n */\nexport const swaggerGenCode = (swagger: SwaggerJsonTS | string, genList: genListEnum[], options: OptionsTS): GenCodeResultTS => {\n  let ts,service,apiInfo;\n\n  if (typeof swagger === 'string') {\n    const swaggerData = {\n      swagger: '',\n      info: {\n        title: '',\n        version: '',\n        description: ''\n      },\n      basePath: '',\n      tags: [],\n      paths: {},\n      definitions: {}\n    }\n\n    apiInfo = genApi(swaggerData);\n  } else {\n    apiInfo = genApi(swagger);\n  }\n\n  if (genList.includes(genListEnum.ts)) {\n    ts = genTS(apiInfo, options);\n  }\n\n  if (genList.includes(genListEnum.service)) {\n    service = genService(apiInfo, options);\n  }\n\n  console.log('---options', options);\n\n\n  const result = {\n    apiInfo\n  }\n\n  return Object.assign(result, ts ? {ts} : {}, service ? {service}: {});\n}\n"],"names":["SwaggerParameterInEnum","SchemaTypeEnum","RequestBodyTypeEnum","genListEnum","JsonTypeEnum","genApi","swaggerData","console","log","swagger","info","title","version","description","basePath","tags","name","apiList","summary","path","method","requestParams","type","requestQuery","requestHeader","requestBodyType","json","requestBody","responseList","statusCode","data","string","genTSCode","options","genTS","apiInfo","jsonSchema","genService","swaggerGenCode","genList","paths","definitions","includes","ts","service","result","Object","assign"],"mappings":"oEAkBA,SAAKA,GACHA,mBACAA,qBACAA,mBACAA,2BACAA,uBALF,CAAKA,uBAAAA,4BAQL,SAAYC,GACVA,uBACAA,uBACAA,yBACAA,yBACAA,uBACAA,qBACAA,mBACAA,iBARF,CAAYA,eAAAA,oBAiFZ,SAAYC,GACVA,mBACAA,mBACAA,mBACAA,iBAJF,CAAYA,oBAAAA,yBAyCZ,SAAkBC,GAChBA,iBACAA,eACAA,yBAHF,CAAkBA,YAAAA,iBAmBlB,SAAYC,GACVA,mBACAA,+BAFF,CAAYA,aAAAA,kBArJZ,IAAKJ,uBAQOC,eAiFAC,oBAyCMC,YAmBNC,aCrKCC,OAAS,SAACC,GAGrB,OAFAC,QAAQC,IAAI,aAAcF,GAEnB,CACLG,QAAS,GACTC,KAAM,CACJC,MAAO,GACPC,QAAS,GACTC,YAAa,IAEfC,SAAU,GACVC,KAAM,CACJ,CACEC,KAAM,SACNH,YAAa,WAGjBI,QAAS,CACP,CACEC,QAAS,SACTC,KAAM,SACNC,OAAQ,SACRL,KAAM,CAAC,UACPM,cAAe,CACb,CAEEL,KAAM,SACNM,KAAM,SACNT,YAAa,WAGjBU,aAAc,CACZ,CAEEP,KAAM,SACNM,KAAM,SACNT,YAAa,WAGjBW,cAAe,CACb,CAEER,KAAM,SACNM,KAAM,SACNT,YAAa,WAGjBY,gBAAiBvB,oBAAoBwB,KACrCC,YAAa,GACbC,aAAc,CACZ,CACEC,WAAY,IACZhB,YAAa,SACbiB,KAAM,CACJR,KAAMrB,eAAe8B,cCtDtBC,UAAY,SAACF,EAAWR,EAAoBW,GAGvD,OAFA1B,QAAQC,IAAI,eAAgBsB,EAAMR,EAAMW,GAEjC,ICFIC,MAAQ,SAACC,EAAoBF,GAKxC,OAJA1B,QAAQC,IAAI,gBAAiB2B,EAASF,GAEtCD,UAAUG,EAAS/B,aAAagC,WAAYH,GAErC,ICNII,WAAa,SAACF,EAAoBF,GAG7C,OAFA1B,QAAQC,IAAI,gBAAiB2B,EAASF,GAE/B,ICQIK,eAAiB,SAAC7B,EAAiC8B,EAAwBN,GAiBpFE,EAdqB,iBAAZ1B,EAcCJ,OAbU,CAClBI,QAAS,GACTC,KAAM,CACJC,MAAO,GACPC,QAAS,GACTC,YAAa,IAEfC,SAAU,GACVC,KAAM,GACNyB,MAAO,GACPC,YAAa,KAKLpC,OAAOI,GAGf8B,EAAQG,SAASvC,YAAYwC,MAC/BA,EAAKT,MAAMC,EAASF,IAGlBM,EAAQG,SAASvC,YAAYyC,WAC/BA,EAAUP,WAAWF,EAASF,IAGhC1B,QAAQC,IAAI,aAAcyB,GA7B1B,IAAIU,EAAGC,EAgCDC,EAAS,CACbV,WAGF,OAAOW,OAAOC,OAAOF,EAAQF,EAAK,CAACA,MAAM,GAAIC,EAAU,CAACA,WAAU"}